<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>一番码客</title>
  
  <subtitle>效率软件推荐</subtitle>
  <link href="http://www.efonmark.com/atom.xml" rel="self"/>
  
  <link href="http://www.efonmark.com/"/>
  <updated>2023-01-15T04:40:54.295Z</updated>
  <id>http://www.efonmark.com/</id>
  
  <author>
    <name>一番码客</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>一番码客-极客工具</title>
    <link href="http://www.efonmark.com/2023/01/01/%E9%A6%96%E9%A1%B5/efonmark_tools/"/>
    <id>http://www.efonmark.com/2023/01/01/%E9%A6%96%E9%A1%B5/efonmark_tools/</id>
    <published>2022-12-31T16:00:00.000Z</published>
    <updated>2023-01-15T04:40:54.295Z</updated>
    
    <content type="html"><![CDATA[<table><thead><tr><th align="center">极客工具</th><th align="center">最新版本</th></tr></thead><tbody><tr><td align="center">一番码客 - MarkTool</td><td align="center"><a href="https://gitee.com/efonfighting/markTool-Release/releases">marktool_v1.2.1.zip</a></td></tr></tbody></table><span id="more"></span><h2 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1 介绍"></a>1 介绍</h2><h3 id="1-1-使用注意"><a href="#1-1-使用注意" class="headerlink" title="1.1 使用注意"></a>1.1 使用注意</h3><ul><li><strong>杀毒软件可能误报病毒，添加信任即可；</strong></li><li><strong>只支持64位windows系统；</strong></li><li><strong>请勿删除config文件夹；</strong></li></ul><h3 id="1-2-主界面"><a href="#1-2-主界面" class="headerlink" title="1.2 主界面"></a>1.2 主界面</h3><p><img src="/2023/01/01/%E9%A6%96%E9%A1%B5/efonmark_tools/surface_main.png" alt="surface_main"></p><h3 id="1-3-目录结构"><a href="#1-3-目录结构" class="headerlink" title="1.3 目录结构"></a>1.3 目录结构</h3><p>解压后目录结构如下：</p><p><img src="/2023/01/01/%E9%A6%96%E9%A1%B5/efonmark_tools/content.png" alt="content"></p><h3 id="1-4-功能：喜马拉雅音频下载"><a href="#1-4-功能：喜马拉雅音频下载" class="headerlink" title="1.4 功能：喜马拉雅音频下载"></a>1.4 功能：喜马拉雅音频下载</h3><h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><ul><li><p>该版本只可下载免费的喜马拉雅音频。 </p></li><li><p>搜索专辑: </p><ul><li>输入想要下载的专辑关键字，点击进行搜索 </li><li>双击搜索结果可显示该专辑节目列表</li></ul></li><li><p>打开链接：</p><ul><li>输入喜马拉雅专辑的网址连接 </li><li>输入框粘贴使用ctrl+v</li></ul></li><li><p>保存路径： </p><ul><li>点击修改下载文件所要保存的路径 </li><li>保存名：下载次序编号_节目名.mp3</li></ul></li><li><p>下载选中： </p><ul><li>可ctrl+a全选，也可按住ctrl用鼠标多选 </li><li>选中要下载的文件，点击开始下载</li></ul></li></ul><h4 id="搜索专辑的方式"><a href="#搜索专辑的方式" class="headerlink" title="搜索专辑的方式"></a>搜索专辑的方式</h4><p><img src="/2023/01/01/%E9%A6%96%E9%A1%B5/efonmark_tools/ximalaya1.gif" alt="ximalaya1"></p><h4 id="打开链接的方式"><a href="#打开链接的方式" class="headerlink" title="打开链接的方式"></a>打开链接的方式</h4><p><img src="/2023/01/01/%E9%A6%96%E9%A1%B5/efonmark_tools/image-20210703224140922.png" alt="image-20210703224140922"></p><h4 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h4><p><img src="/2023/01/01/%E9%A6%96%E9%A1%B5/efonmark_tools/ximalaya.png" alt="ximalaya"></p><h3 id="1-5-功能：公众号网页下载-β"><a href="#1-5-功能：公众号网页下载-β" class="headerlink" title="1.5 功能：公众号网页下载(β)"></a>1.5 功能：公众号网页下载(β)</h3><ul><li><p>已适配网站:</p><ul><li>微信公众号文章</li></ul></li><li><p>注意：</p><ul><li>只针对可以公开访问的网站</li><li>无法下载需要登陆的网站</li><li>未适配网站可能存在格式异常</li><li>建议每次输入网址不超过500个</li><li>输入框粘贴使用Ctrl+v</li></ul></li><li><p>功能说明：</p><ul><li>下载网页保存到本地</li><li>保存形式：html + 图片 + PDF(可选)</li><li>保存名：下载时间_网页名</li></ul></li></ul><p><img src="/2023/01/01/%E9%A6%96%E9%A1%B5/efonmark_tools/image-20210703224309459.png" alt="image-20210703224309459"></p><h3 id="1-6-功能：PDF合并"><a href="#1-6-功能：PDF合并" class="headerlink" title="1.6 功能：PDF合并"></a>1.6 功能：PDF合并</h3><ul><li><p>功能说明： </p><ul><li>合并后的文档带目录。 </li><li>最多支持400个文档的合并。 </li><li>如有损坏文件，将自动跳过。</li></ul></li><li><p>使用说明: </p><ul><li>点击“选择要合并的文档”。 </li><li>如需调整顺序，在文本框内直接编辑。</li><li>保证路径的完整性，一个文件一行。 </li><li>点击“开始合并”。 </li><li>选择保存路径并输入保存名称。</li></ul></li></ul><p><img src="/2023/01/01/%E9%A6%96%E9%A1%B5/efonmark_tools/image-20210703224403299.png" alt="image-20210703224403299"></p><h2 id="2-更新日志"><a href="#2-更新日志" class="headerlink" title="2 更新日志"></a>2 更新日志</h2><h3 id="v1-2-1-2021-06-27-发布"><a href="#v1-2-1-2021-06-27-发布" class="headerlink" title="v1.2.1  [2021-06-27 发布]"></a>v1.2.1  [2021-06-27 发布]</h3><ul><li>md5：<code>12ea7302fd54573f3c393509c520ed11 marktool_v1.2.1_win64.exe</code></li><li>添加喜马拉雅专辑下载功能</li></ul><h3 id="v1-1-1-2020-06-07-发布"><a href="#v1-1-1-2020-06-07-发布" class="headerlink" title="v1.1.1  [2020-06-07 发布]"></a>v1.1.1  [2020-06-07 发布]</h3><ul><li>微信公众号网页下载功能，保存html+图片+PDF</li><li>PDF合并功能</li></ul>]]></content>
    
    
    <summary type="html">&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;center&quot;&gt;极客工具&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;最新版本&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;一番码客 - MarkTool&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://gitee.com/efonfighting/markTool-Release/releases&quot;&gt;marktool_v1.2.1.zip&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>一番码客</title>
    <link href="http://www.efonmark.com/2023/01/01/%E9%A6%96%E9%A1%B5/readme/"/>
    <id>http://www.efonmark.com/2023/01/01/%E9%A6%96%E9%A1%B5/readme/</id>
    <published>2022-12-31T16:00:00.000Z</published>
    <updated>2023-01-15T04:57:59.271Z</updated>
    
    <content type="html"><![CDATA[<table><tr><td ><center><img src="https://www.efonmark.com/2023/01/01/%E9%A6%96%E9%A1%B5/readme/guanzhu_1.jpg" width = 50%></center></td><td width="60%" align=left><b>    微信公众号：<a href="http://www.efonmark.com/readme/guanzhu_1.jpg">一番码客</a><br>    微信：<a href="http://www.efonmark.com/readme/weixin.jpg">Efon-fighting</a><br>    网站：<a href="http://www.efonmark.com">www.efonmark.com</a><br></b></td></tr></table><span id="more"></span> <h2 id="网站："><a href="#网站：" class="headerlink" title=" 网站： "></a><font color=Green> 网站： </font></h2><p><strong><a href="http://www.efonmark.com/">www.efonmark.com</a></strong><br><img src="/2023/01/01/%E9%A6%96%E9%A1%B5/readme/website.png"></p><h2 id="微信公众号"><a href="#微信公众号" class="headerlink" title=" 微信公众号 "></a><font color=Green> 微信公众号 </font></h2><p><strong>一番码客</strong><br><img src="/2023/01/01/%E9%A6%96%E9%A1%B5/readme/guanzhu_1.jpg"></p><h2 id="微信"><a href="#微信" class="headerlink" title=" 微信"></a><font color=Green> <strong>微信</strong></font></h2><p><strong>Efon-Fighting</strong><br><img src="/2023/01/01/%E9%A6%96%E9%A1%B5/readme/weixin.jpg"></p>]]></content>
    
    
    <summary type="html">&lt;table&gt;
&lt;tr&gt;
&lt;td &gt;&lt;center&gt;&lt;img src=&quot;https://www.efonmark.com/2023/01/01/%E9%A6%96%E9%A1%B5/readme/guanzhu_1.jpg&quot; width = 50%&gt;&lt;/center&gt;&lt;/td&gt;
&lt;td width=&quot;60%&quot; align=left&gt;&lt;b&gt;
    微信公众号：&lt;a href=&quot;http://www.efonmark.com/readme/guanzhu_1.jpg&quot;&gt;一番码客&lt;/a&gt;&lt;br&gt;
    微信：&lt;a href=&quot;http://www.efonmark.com/readme/weixin.jpg&quot;&gt;Efon-fighting&lt;/a&gt;&lt;br&gt;
    网站：&lt;a href=&quot;http://www.efonmark.com&quot;&gt;www.efonmark.com&lt;/a&gt;&lt;br&gt;&lt;/b&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>VSCode配置与使用</title>
    <link href="http://www.efonmark.com/2019/04/30/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/2019-04-30-VSCode%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
    <id>http://www.efonmark.com/2019/04/30/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/2019-04-30-VSCode%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/</id>
    <published>2019-04-29T16:00:00.000Z</published>
    <updated>2023-03-04T08:00:54.298Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><span id="more"></span><blockquote><p><strong>一番码客 : <a href="http://www.efonmark.com/">www.efonmark.com</a></strong><br>专注数据挖掘与聚合，分享数据挖掘的软件工具与开发技术。</p></blockquote><hr><h2 id="汉化-设置中文"><a href="#汉化-设置中文" class="headerlink" title="汉化(设置中文)"></a>汉化(设置中文)</h2><ol><li>在VSCode中按下快捷键“Ctrl + Shift + P”（显示命令面板 Show Command Palette）。  </li><li>命令面板中输入“Configure Display Language”，回车进入。<br><img src="/2019/04/30/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/2019-04-30-VSCode%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/vscode_chi_01.png"></li><li>选择”install additional languages…”<br><img src="/2019/04/30/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/2019-04-30-VSCode%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/vscode_chi_02.png"></li><li>左边边侧栏选择Chinese（Simplified），点击install。<br><img src="/2019/04/30/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/2019-04-30-VSCode%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/vscode_chi_03.png"></li><li>按下快捷键“Ctrl + Shift + P”，输入“Configure Display Language”，回车进入，下拉菜单中选择点击“zh-cn”,提示重启，选择重启<br><img src="/2019/04/30/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/2019-04-30-VSCode%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/vscode_chi_02.png"></li></ol><p><img src="/2019/04/30/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/2019-04-30-VSCode%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/vscode_chi_04.png"></p><p>重启后发现成功了。切换其他语言步骤类似。  </p><h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><blockquote><p>快速复制当前行到下一行：shift+alt+↓</p></blockquote><h2 id="显示视图"><a href="#显示视图" class="headerlink" title="显示视图"></a>显示视图</h2><p>显示所有函数列表：左侧显示大纲</p><h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><h3 id="Markdown-All-in-One"><a href="#Markdown-All-in-One" class="headerlink" title="Markdown All in One"></a>Markdown All in One</h3><ol><li>hot key</li></ol><table><thead><tr><th align="center">Key</th><th align="center">Command</th></tr></thead><tbody><tr><td align="center">Ctrl + B</td><td align="center">Toggle bold</td></tr><tr><td align="center">Ctrl + I</td><td align="center">Toggle italic</td></tr><tr><td align="center">Ctrl + Shift + ]</td><td align="center">Toggle heading (uplevel)</td></tr><tr><td align="center">Ctrl + Shift + [</td><td align="center">Toggle heading (downlevel)</td></tr><tr><td align="center">Ctrl + M</td><td align="center">Toggle math environment</td></tr><tr><td align="center">Alt + C</td><td align="center">Check&#x2F;Uncheck task list item</td></tr><tr><td align="center">Ctrl + Shift + V</td><td align="center">Toggle preview</td></tr><tr><td align="center">Ctrl + K V</td><td align="center">Toggle preview to side</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">&lt;p&gt;[TOC]&lt;/p&gt;</summary>
    
    
    
    <category term="linux及工具使用" scheme="http://www.efonmark.com/categories/linux%E5%8F%8A%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>python爬虫实战-微信公众号文章下载-(03)python开源库做图文识别</title>
    <link href="http://www.efonmark.com/2019/04/13/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/2019-04-13-python%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98-%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0%E4%B8%8B%E8%BD%BD-(03)python%E5%BC%80%E6%BA%90%E5%BA%93%E5%81%9A%E5%9B%BE%E6%96%87%E8%AF%86%E5%88%AB/"/>
    <id>http://www.efonmark.com/2019/04/13/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/2019-04-13-python%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98-%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0%E4%B8%8B%E8%BD%BD-(03)python%E5%BC%80%E6%BA%90%E5%BA%93%E5%81%9A%E5%9B%BE%E6%96%87%E8%AF%86%E5%88%AB/</id>
    <published>2019-04-12T16:00:00.000Z</published>
    <updated>2023-01-15T04:59:14.749Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>一番码客 : 效率软件推荐</strong><br><strong><a href="http://www.efonmark.com/">www.efonmark.com</a></strong></p></blockquote><p><img src="/2019/04/13/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/2019-04-13-python%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98-%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0%E4%B8%8B%E8%BD%BD-(03)python%E5%BC%80%E6%BA%90%E5%BA%93%E5%81%9A%E5%9B%BE%E6%96%87%E8%AF%86%E5%88%AB/fighting1.jpg"></p><blockquote><p>前面我们讲到了adb的封装，里面具体讲到到了在一副图片中寻找目标的坐标并点击。这篇文章我们讲讲对一副图片的特定区域做截取，并利用开源库做图纹识别。<br>要实现这个步骤的原因是，最初想实现爬取微信公众号历史文章这个功能时，一番没有抓包爬虫经验，于是为了获取历史文章的标题用于pdf打印时的命名，一番想到截图后对图片做图文识别，然后点击文章标题，进入到文章阅读界面然后结合目标图片识别“复制链接”来获取到文章的链接。  </p></blockquote><span id="more"></span><h2 id="安装-tesseract-ocr"><a href="#安装-tesseract-ocr" class="headerlink" title="安装 tesseract-ocr"></a>安装 tesseract-ocr</h2><p>tesserat是一个开源的文字识别引擎，目前已经开发到4.0版本，训练支持了100+种的语言了。这里安装以ubunut18.04为例。  </p><p>安装分为两部分:</p><ol><li>安装引擎<br>对于ubuntu18.04来说安装很简单，两条命令搞定：<blockquote><p>sudo apt install tesseract-ocr<br>sudo apt install libtesseract-dev</p></blockquote></li></ol><ul><li>安装需要识别语言的现有训练库:<br>安装简体中文的识别库：<blockquote><p>sudo apt install tesseract-ocr-chi-sim</p></blockquote></li></ul><p>如果是英文识别库：</p><blockquote><p>sudo apt install tesseract-ocr-eng</p></blockquote><p>如果是windows，下载对应的32位或64位安装包，然后将下载的语言识别库“xxx.traineddata”放到安装目录（比如C:\Program Files\Tesseract-OCR\tessdata）下。<br>对于mac或者其他版本linux系统的安装方式，当然包括windows详细安装教程，请参考tesseract-ocr官方github的wiki（当然是英文的啦）。</p><blockquote><p>后台回复关键字 <strong>“ tesseract-ocr ”</strong> 获取官方工程github地址和windows安装包、语言包。  </p></blockquote><p>安装完成之后你发现就可以用tesseract命令啦。<br><img src="/2019/04/13/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/2019-04-13-python%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98-%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0%E4%B8%8B%E8%BD%BD-(03)python%E5%BC%80%E6%BA%90%E5%BA%93%E5%81%9A%E5%9B%BE%E6%96%87%E8%AF%86%E5%88%AB/tesseract_1.jpg"></p><h2 id="python结合pytesseract做图文识别"><a href="#python结合pytesseract做图文识别" class="headerlink" title="python结合pytesseract做图文识别"></a>python结合pytesseract做图文识别</h2><p>首先确保安装了python pytesseract包，</p><blockquote><ul><li>pycharm 请在setting里安装。</li><li>终端安装直接 “pip3 install pytesseract”。</li></ul></blockquote><p>接下来就可以直接通过python调用pytesseract的接口做图文识别啦。下面以一幅手机屏幕截图为例。  </p><blockquote><p><img src="/2019/04/13/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/2019-04-13-python%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98-%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0%E4%B8%8B%E8%BD%BD-(03)python%E5%BC%80%E6%BA%90%E5%BA%93%E5%81%9A%E5%9B%BE%E6%96%87%E8%AF%86%E5%88%AB/%E4%B8%80%E7%95%AA%E7%A0%81%E5%AE%A2.jpg"></p></blockquote><ol><li>这里标定每篇文章题目的范围，如图红框。</li></ol><ul><li><p>test代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">def test():</span><br><span class="line">    from PIL import Image</span><br><span class="line">    import pytesseract</span><br><span class="line">    import matplotlib.pyplot as plt</span><br><span class="line"></span><br><span class="line">    #读取图片，并截取其中的一部分</span><br><span class="line">    img = Image.open(&quot;/home/soy/Desktop/一番码客.jpg&quot;)</span><br><span class="line">    grey = img.convert(&#x27;L&#x27;) # 只留取亮度信息，转换为黑白色，有利于文字识别</span><br><span class="line">    cutPic = grey.crop((25, 270, 690, 540)) # 上图红框里的范围(x1,y1,x2,y2)</span><br><span class="line"></span><br><span class="line">    #这里为了将所有非白色的像素点转换为纯黑色，有利于增高文字的锐度、清晰度。</span><br><span class="line">    xSize = cutPic.size[0]</span><br><span class="line">    ySize = cutPic.size[1]</span><br><span class="line">    for y in range(ySize):</span><br><span class="line">        for x in range(xSize):</span><br><span class="line">            if(cutPic.getpixel((x,y)) != 255):</span><br><span class="line">                cutPic.putpixel((x,y),0)</span><br><span class="line"></span><br><span class="line">    #展示处理后的图像</span><br><span class="line">    plt.imshow(cutPic)</span><br><span class="line">    plt.show()</span><br><span class="line"></span><br><span class="line">    #图文识别</span><br><span class="line">    itemStr = pytesseract.image_to_string((cutPic), lang=&#x27;chi_sim&#x27;).replace(&#x27; &#x27;, &#x27;&#x27;)</span><br><span class="line">    print(itemStr)</span><br><span class="line"></span><br><span class="line">    #文字拼接处理</span><br><span class="line">    itemStrList = itemStr.split(&#x27;\n&#x27;,8)</span><br><span class="line">    dateStr = itemStrList[len(itemStrList)-1]</span><br><span class="line">    topicStr = &#x27;&#x27;</span><br><span class="line">    for idx in range (len(itemStrList)-1):</span><br><span class="line">        topicStr += itemStrList[idx]</span><br><span class="line"></span><br><span class="line">    #处理后的文字</span><br><span class="line">    print(dateStr+&#x27;_&#x27;+topicStr)</span><br></pre></td></tr></table></figure></li><li><p>处理后图片：</p><blockquote><p><img src="/2019/04/13/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/2019-04-13-python%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98-%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0%E4%B8%8B%E8%BD%BD-(03)python%E5%BC%80%E6%BA%90%E5%BA%93%E5%81%9A%E5%9B%BE%E6%96%87%E8%AF%86%E5%88%AB/tesseract_2.jpg"></p></blockquote></li><li><p>识别结果：</p><blockquote><p><img src="/2019/04/13/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/2019-04-13-python%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98-%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0%E4%B8%8B%E8%BD%BD-(03)python%E5%BC%80%E6%BA%90%E5%BA%93%E5%81%9A%E5%9B%BE%E6%96%87%E8%AF%86%E5%88%AB/tesseract_3.jpg"></p></blockquote></li></ul><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>怎么样，用python做图文识别是不是超简单？这就是python的魅力所在啊。<br>那么获取每篇文章的思路就是：</p><ol><li>通过OCR获取最上面一篇的文章标题；</li><li>点击进去，通过图像目标查找，点击“复制文章链接”按钮，并将链接传回PC保存；</li><li>返回，向下滑动页面刚好一栏标题，重复1。</li><li>通关！</li></ol><blockquote><p><strong>人生的蜕变不知是否一定需要伴随着痛苦，但从很多经验来看，这条路是行得通的。<br>你承受了人生的痛苦，也经历着世间的繁华。无所谓不可承受之重。</strong></p></blockquote><p><img src="/2019/04/13/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/2019-04-13-python%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98-%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0%E4%B8%8B%E8%BD%BD-(03)python%E5%BC%80%E6%BA%90%E5%BA%93%E5%81%9A%E5%9B%BE%E6%96%87%E8%AF%86%E5%88%AB/fighting.jpg"></p><blockquote><p><strong>微信公众号：一番码客</strong><br><strong>官方网站： <a href="http://www.efonmark.com/">www.efonmark.com</a></strong></p></blockquote>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;一番码客 : 效率软件推荐&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;&lt;a href=&quot;http://www.efonmark.com/&quot;&gt;www.efonmark.com&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;/2019/04/13/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/2019-04-13-python%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98-%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0%E4%B8%8B%E8%BD%BD-(03)python%E5%BC%80%E6%BA%90%E5%BA%93%E5%81%9A%E5%9B%BE%E6%96%87%E8%AF%86%E5%88%AB/fighting1.jpg&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;前面我们讲到了adb的封装，里面具体讲到到了在一副图片中寻找目标的坐标并点击。这篇文章我们讲讲对一副图片的特定区域做截取，并利用开源库做图纹识别。&lt;br&gt;要实现这个步骤的原因是，最初想实现爬取微信公众号历史文章这个功能时，一番没有抓包爬虫经验，于是为了获取历史文章的标题用于pdf打印时的命名，一番想到截图后对图片做图文识别，然后点击文章标题，进入到文章阅读界面然后结合目标图片识别“复制链接”来获取到文章的链接。  &lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="软件开发实战" scheme="http://www.efonmark.com/categories/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/"/>
    
    
  </entry>
  
  <entry>
    <title>python爬虫实战-微信公众号文章下载-(02)python封装adb命令操作安卓手机</title>
    <link href="http://www.efonmark.com/2019/03/28/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/2019-03-28-python%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98-%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0%E4%B8%8B%E8%BD%BD-(02)python%E5%B0%81%E8%A3%85adb%E5%91%BD%E4%BB%A4%E6%93%8D%E4%BD%9C%E5%AE%89%E5%8D%93%E6%89%8B%E6%9C%BA/"/>
    <id>http://www.efonmark.com/2019/03/28/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/2019-03-28-python%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98-%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0%E4%B8%8B%E8%BD%BD-(02)python%E5%B0%81%E8%A3%85adb%E5%91%BD%E4%BB%A4%E6%93%8D%E4%BD%9C%E5%AE%89%E5%8D%93%E6%89%8B%E6%9C%BA/</id>
    <published>2019-03-27T16:00:00.000Z</published>
    <updated>2023-01-15T04:59:23.140Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>一番码客 : 效率软件推荐。</strong><br><strong><a href="http://www.efonmark.com/">www.efonmark.com</a></strong> </p></blockquote><p>让大家久等了，来不及解释（jiaobian）了，让我们上车吧。<br><img src="/2019/03/28/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/2019-03-28-python%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98-%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0%E4%B8%8B%E8%BD%BD-(02)python%E5%B0%81%E8%A3%85adb%E5%91%BD%E4%BB%A4%E6%93%8D%E4%BD%9C%E5%AE%89%E5%8D%93%E6%89%8B%E6%9C%BA/shangche.jpeg"><br>正如一番在这个系列文章的（00）篇中所说，一番在做1.0版本的时候用到了一些取巧的方法，其中就包括python通过adb操作手机。  </p><span id="more"></span><p>之前微信第一款小程序游戏“跳一跳”突然火起来的时候，办公室午休的时候掀起了一股跳一跳的热潮，这个时候也是一番接触python不久。在网上很快就有小伙伴用python做了一个外挂，并传在了github上开源开发。这其中的原理就用到了adb操作和图像处理，鉴于python的使用群体庞大，这个项目也得到了持续的优化和更新，操作对于新手非常友善，也非常值得新手用来学习，有趣又实用（有兴趣的同学，公众号后台回复“跳一跳”获取github源码地址）。</p><h2 id="ADB的使用方法及常见命令"><a href="#ADB的使用方法及常见命令" class="headerlink" title="ADB的使用方法及常见命令"></a>ADB的使用方法及常见命令</h2><p>adb的基本使用方法和常见的命令，接触过安卓调试的同学应该都会。这里给出一个一番觉得比较简洁明了的文章，不了解ADB的同学可以先学习下。</p><ul><li><a href="http://mp.weixin.qq.com/s?__biz=MzIzMDU5MDg4OA==&mid=2247484837&idx=1&sn=1d9e435bbfc06b7eb8fc527fc175c879&scene=0#wechat_redirect">ADB命令集锦</a>  </li><li><a href="http://mp.weixin.qq.com/s?__biz=MzA4NTQwNDcyMA==&mid=2650662207&idx=1&sn=ac582fe052fb8ad12d7c3f8e5a140c98&scene=0#wechat_redirect">你应该知道的一些 ADB 命令</a>  </li><li><a href="https://blog.csdn.net/good123_2014/article/details/79107765">Android adb shell input 命令详解</a>  <blockquote><p>这里我们重点提一下<strong>“adb shell input”</strong> ，这个命令是我们模拟手动操作用的最频繁的一个命令，主要是<strong>模拟输入文本、按键事件、点击、滑动</strong>等操作，我们在用python封装的时候会重点用到，接下来的代码中大家也会看到。</p></blockquote></li></ul><h2 id="python-adb操作封装"><a href="#python-adb操作封装" class="headerlink" title="python adb操作封装"></a>python adb操作封装</h2><p>首先来看下一番的1.0版本为了采集公众号历史文章的标题和链接，封装了哪些adb操作。<br><img src="/2019/03/28/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/2019-03-28-python%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98-%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0%E4%B8%8B%E8%BD%BD-(02)python%E5%B0%81%E8%A3%85adb%E5%91%BD%E4%BB%A4%E6%93%8D%E4%BD%9C%E5%AE%89%E5%8D%93%E6%89%8B%E6%9C%BA/01.png"><br>这里一番将adb 操作封装为一个AdbOpt类，<strong>init</strong>() 函数就是创建类的对象时自动执行的初始化函数，类似C++里的构造函数，通常我们在这个函数里做一些类变量的初始化动作。代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">def __init__(self,phonePara):</span><br><span class="line">    &#x27;&#x27;&#x27;</span><br><span class="line">    @ adb   工具类初始化，检查adb路径与环境</span><br><span class="line">    @</span><br><span class="line">    @ return</span><br><span class="line">    @</span><br><span class="line">    @ param</span><br><span class="line">    @   phonePara 用于指定手机相关参数</span><br><span class="line">    @ exception</span><br><span class="line">    @ notice</span><br><span class="line">    &#x27;&#x27;&#x27;</span><br><span class="line">    print(phonePara)</span><br><span class="line">    self.deviceId = phonePara[&#x27;serial&#x27;] #创建类之后需要赋值 deviceId</span><br><span class="line"></span><br><span class="line">    if platform.system() == &#x27;Windows&#x27;:</span><br><span class="line">        adbToolPath = os.path.join(&quot;adb&quot;)</span><br><span class="line">        self.option = &#x27;&#x27;</span><br><span class="line">    elif platform.system() == &#x27;Linux&#x27;:</span><br><span class="line">        adbToolPath = adbPara[&#x27;pcPara&#x27;][&#x27;linux&#x27;][&#x27;adbPath&#x27;]</span><br><span class="line">        self.option = &#x27; -s &#x27; + self.deviceId</span><br><span class="line">    else:</span><br><span class="line">        print(&#x27;Host OS is not compatible.\n&#x27;)</span><br><span class="line">        exit(1)</span><br><span class="line"></span><br><span class="line">    print(&#x27;adbToolPath:&#x27; + adbToolPath)</span><br><span class="line">    try:</span><br><span class="line">        subprocess.Popen(</span><br><span class="line">            [adbToolPath], stdout=subprocess.PIPE, stderr=subprocess.PIPE)</span><br><span class="line">        self.adbToolPath = adbToolPath</span><br><span class="line">    except OSError:</span><br><span class="line">        print(&#x27;请安装 ADB 及驱动并配置环境变量&#x27;)</span><br><span class="line">        exit(1)</span><br></pre></td></tr></table></figure><p>这里phonePara，是为了适配多部手机，让一台PC可以同时adb操作多部手机（虽然后面没有用上）。为了存储每部手机的不同参数，和windows、linux的adb路径参数，一番建了一个这个文件里的adbPara变量：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">adbPara = &#123;</span><br><span class="line">    &#x27;phonePara&#x27;: &#123;</span><br><span class="line">        &#x27;HuaweiMate9&#x27;: &#123;</span><br><span class="line">            &#x27;serial&#x27;: &#x27;3HX0217601006195&#x27;,</span><br><span class="line">            &#x27;screenSize&#x27;: [1080, 1920]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x27;meizuPro5&#x27;: &#123;</span><br><span class="line">            &#x27;serial&#x27;: &#x27;860BCNA224M5&#x27;,</span><br><span class="line">            &#x27;screenSize&#x27;: [1080, 1920]</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    &#x27;pcPara&#x27;: &#123;</span><br><span class="line">        &#x27;windows&#x27;: &#123;</span><br><span class="line">            &#x27;adbPath&#x27;: &#x27;&#x27;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x27;linux&#x27;: &#123;</span><br><span class="line">            &#x27;adbPath&#x27;: &#x27;/home/efonfighting/Android/Sdk/platform-tools/adb&#x27;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面就不一一贴代码了，解释下每个函数的封装，如果需要封装的源码，后台回复“adb”获取。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">testDevice(self):</span><br><span class="line">  @ 查看是否有设备连接</span><br><span class="line"></span><br><span class="line">getScreenSize(self):</span><br><span class="line">  @ adb 获取屏幕分辨率</span><br><span class="line">  @ return  屏幕分辨率（eg. &quot;Physical size: 1080x1920 Override size: 720x1280&quot;）</span><br><span class="line"></span><br><span class="line">getScreenDensity(self):</span><br><span class="line">  @ 获取屏幕DPI（每英寸点数）</span><br><span class="line"></span><br><span class="line">getDeviceInfo(self):</span><br><span class="line">  @ 获取ro.product.device</span><br><span class="line"></span><br><span class="line">getDeviceOsInfo(self):</span><br><span class="line">  @ 获取ro.build.version.release</span><br><span class="line"></span><br><span class="line">dumpDeviceInfo(self):</span><br><span class="line">  @ 检查设备连接状态，显示设备信息</span><br><span class="line"></span><br><span class="line">getScreenCapSize(self):</span><br><span class="line">  @ adb 获取截屏图片分辨率</span><br><span class="line">  @ return  eg.[720,1280]</span><br><span class="line"></span><br><span class="line">runAdbCmd(self, rawCommand):</span><br><span class="line">  @ 执行任意adb命令</span><br><span class="line"></span><br><span class="line">pullScreenShot(self, savePath):</span><br><span class="line">  @ 获取屏幕截图</span><br><span class="line">  @ adb shell screencap -p /sdcard/screencap.png;adb pull /sdcard/screencap.png ~/Desktop</span><br><span class="line"></span><br><span class="line">adbTap(self, x, y):</span><br><span class="line">  @ 单击任意坐标点(x,y)</span><br><span class="line"></span><br><span class="line">adbSwipe(self, x1, y1, x2, y2, ms, delay):</span><br><span class="line">  @ 从一点滑动到另一点</span><br><span class="line">  @ param</span><br><span class="line">  @   delay:swipe后delay多少秒返回，等待某些动作缓冲完成</span><br><span class="line"></span><br><span class="line">drawCircle(self, img, pos):</span><br><span class="line">    @ 在任意坐标点(x,y)画圆</span><br><span class="line"></span><br><span class="line">FindFlgFromCap(self, flgPath, confidenceVTH, blockEn, findDelay):</span><br><span class="line">  @ 在图片中找出特征图案</span><br><span class="line">  @ return 特征图案中心坐标(x,y) or None</span><br><span class="line">  @ param</span><br><span class="line">  @    confidenceVTH:0.0-1.0</span><br><span class="line">  @    blockEn:是否阻塞等待flg出现</span><br><span class="line">  @    findDelay: 找到flg后延时findDelay秒后再返回</span><br><span class="line">  @ notice    必须像素点匹配</span><br><span class="line"></span><br><span class="line">def tapFlgFromPic(self, flgPath, confidenceVTH, blockEn, findDelay, tapDelay):</span><br><span class="line">  @ 单击图片中的特征图案</span><br><span class="line">  @ return True/False</span><br><span class="line">  @ param</span><br><span class="line">  @       blockEn(bool):是否阻塞等待flg出现</span><br><span class="line">  @       findDelay:找到flg后延时findDelay秒后再点击flg</span><br><span class="line">  @       delayTime:tap后延时时间返回，做某些动作的缓冲时间，单位秒</span><br><span class="line">  @ notice    必须像素点匹配</span><br></pre></td></tr></table></figure><ul><li><p>可以看到，为什么有一个runAdbCmd命令可以执行任意adb命令，一番还要单独封装一些常用的比如点击、滑屏等操作呢，其实这是为了方便后续要改动一个操作时，只需要改动这个这个封装的函数就行了，而不必每个用到这个操作的地方都去改动，这也是封装的一个思想。  </p></li><li><p>还有里面封装了一些点击特殊图案的操作，这里涉及到aircv库的操作，这里单独将FindFlgFromCap这个函数提出来说一下。<br>这个函数可以帮我们找到图片中的目标图案，但前提是需要先将这个目标图案在本地保存一个，以作对比，一番估计这个find_template函数的实现原理就是简单的像素点对比。<br>最后会返回一个列表，列表里包括目标图案在搜索源图案中的中心位置以及相似度confidence。<br>如果找到多个目标图案则返回多个列表。这个可以帮助我们确定一些特定图案的位置，然后模拟点击，比如公众号里的“复制连接”图标等。</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">def FindFlgFromCap(self, flgPath, confidenceVTH, blockEn, findDelay):</span><br><span class="line">    &#x27;&#x27;&#x27;</span><br><span class="line">    @ 在图片中找出特征图案</span><br><span class="line">    @</span><br><span class="line">    @ return 特征图案中心坐标(x,y) or None</span><br><span class="line">    @</span><br><span class="line">    @ param</span><br><span class="line">    @    confidenceVTH:0.0-1.0</span><br><span class="line">    @    blockEn:是否阻塞等待flg出现</span><br><span class="line">    @    findDelay: 找到flg后延时findDelay秒后再返回</span><br><span class="line">    @ exception</span><br><span class="line">    @ notice    必须像素点匹配</span><br><span class="line">    &#x27;&#x27;&#x27;</span><br><span class="line">    #process = subprocess.getoutput(&#x27;date +%m%d%H%M%S&#x27;)</span><br><span class="line">    #date = process.replace(&#x27;\n&#x27;,&#x27;&#x27;)</span><br><span class="line">    date = &#x27;&#x27; #不保存时间戳</span><br><span class="line">    while True:</span><br><span class="line">        screenshotPath = self.pullScreenShot(&#x27;out/screencap&#x27; + date + &#x27;.png&#x27;)  # eg. out/cap1006120638.png</span><br><span class="line">        print(screenshotPath)</span><br><span class="line">        imsrc = ac.imread(screenshotPath)</span><br><span class="line">        imdst = ac.imread(flgPath)</span><br><span class="line">        pos = ac.find_template(imsrc, imdst)</span><br><span class="line">        if ((pos != None) and (pos[&#x27;confidence&#x27;] &gt; confidenceVTH)):</span><br><span class="line">            print(&#x27;find a &#123;para1&#125;:&#123;para2&#125;&#x27;.format(para1=flgPath,para2=pos))</span><br><span class="line">            flgCenterPosInt = (int(pos[&#x27;result&#x27;][0]), int(pos[&#x27;result&#x27;][1]))</span><br><span class="line">            time.sleep(findDelay)</span><br><span class="line">            # draw_circle(imsrc, circleCenterPosInt)  # draw circle</span><br><span class="line">            #str(input(&#x27;确定开始下一步？[y/n]:&#x27;))</span><br><span class="line">            return flgCenterPosInt</span><br><span class="line">        elif (blockEn == False):</span><br><span class="line">            print(&#x27;Do not find &#123;para1&#125;\n&#x27;.format(para1=flgPath))</span><br><span class="line">            return None</span><br><span class="line">        else:</span><br><span class="line">            print(&#x27;wait for &#123;para1&#125;\n&#x27;.format(para1=flgPath))</span><br><span class="line">            time.sleep(1)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>好了，python对adb的封装就讲到这里，期待你的留言和获取源码哦。我们下期见！</p><blockquote><p><strong>趋势不会因为个别的吝啬与懒惰而停止向前的车轮，所以迈开脚步，一起赶路。</strong>  </p></blockquote><blockquote><p><strong>微信公众号：一番码客</strong><br><strong>官方网站： <a href="http://www.efonmark.com/">www.efonmark.com</a></strong></p></blockquote>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;一番码客 : 效率软件推荐。&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;&lt;a href=&quot;http://www.efonmark.com/&quot;&gt;www.efonmark.com&lt;/a&gt;&lt;/strong&gt; &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;让大家久等了，来不及解释（jiaobian）了，让我们上车吧。&lt;br&gt;&lt;img src=&quot;/2019/03/28/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/2019-03-28-python%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98-%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0%E4%B8%8B%E8%BD%BD-(02)python%E5%B0%81%E8%A3%85adb%E5%91%BD%E4%BB%A4%E6%93%8D%E4%BD%9C%E5%AE%89%E5%8D%93%E6%89%8B%E6%9C%BA/shangche.jpeg&quot;&gt;&lt;br&gt;正如一番在这个系列文章的（00）篇中所说，一番在做1.0版本的时候用到了一些取巧的方法，其中就包括python通过adb操作手机。  &lt;/p&gt;</summary>
    
    
    
    <category term="软件开发实战" scheme="http://www.efonmark.com/categories/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/"/>
    
    
  </entry>
  
  <entry>
    <title>python爬虫实战-微信公众号文章下载-(01)pycharm使用与工程搭建</title>
    <link href="http://www.efonmark.com/2019/03/16/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/2019-03-16-python%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98-%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0%E4%B8%8B%E8%BD%BD-(01)pycharm%E4%BD%BF%E7%94%A8%E4%B8%8E%E5%B7%A5%E7%A8%8B%E6%90%AD%E5%BB%BA/"/>
    <id>http://www.efonmark.com/2019/03/16/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/2019-03-16-python%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98-%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0%E4%B8%8B%E8%BD%BD-(01)pycharm%E4%BD%BF%E7%94%A8%E4%B8%8E%E5%B7%A5%E7%A8%8B%E6%90%AD%E5%BB%BA/</id>
    <published>2019-03-15T16:00:00.000Z</published>
    <updated>2023-01-15T04:59:44.683Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>一番码客 : 效率软件推荐</strong><br><strong><a href="http://www.efonmark.com/">www.efonmark.com</a></strong></p></blockquote><blockquote><p><strong>风筝遇春风而起，春雨遇暖阳而至。精神食粮如期为你呈上。</strong><br><img src="/2019/03/16/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/2019-03-16-python%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98-%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0%E4%B8%8B%E8%BD%BD-(01)pycharm%E4%BD%BF%E7%94%A8%E4%B8%8E%E5%B7%A5%E7%A8%8B%E6%90%AD%E5%BB%BA/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20190316215125.jpg"></p></blockquote><p>所谓工欲善其事必先利其器，为了使用python搞事情，那首先是搭好环境，写下程序员的开山题词“hello world！”。  </p><span id="more"></span><p>跟很多初入一门语言的小伙伴一样，刚开始一番也百度了“python开发工具”之类的问题，但选来选去，目前还是觉得python开发使用最广的IDE-pycharm（社区版）用着顺手，切入最快。pycharm基本是基于eclipse开发的，很多使用习惯和快捷键都和eclipse类似，所以开发过APP或者之前就用eclipse开发的小伙伴可以说是倍感亲切，无缝切换。（虽然一番只是自学java时用过一段时间eclipse）。<br>一番所有的文章和环境，都以ubuntu18.04为基础，并且作为软件开发，ubuntu真的是超顺手啦。  </p><ol><li><p>下载安装<br>直入主题，如果是ubuntu18.04的话，系统自带的软件软件管理工具“ubuntu软件”里可以直接搜索pycharm CE，就可以找到pycharm免费社区版。当然也可以去pycharm官网下载：<a href="https://www.jetbrains.com/pycharm/download/">https://www.jetbrains.com/pycharm/download/</a> 。一番这里的安装后没有汉化，如果小伙伴们看英文不习惯的话，可以选择汉化一下。贴个汉化教程<a href="https://mp.weixin.qq.com/s?src=11&timestamp=1552820095&ver=1490&signature=5xITg2CHgzhWMh*kLme2o5aJ2C1i6L*AYKp9yHVWu2XcUO*OIqMe1sAg985-0uTZ9ZupCrg998Bsdq2XN4Jxh14Um0mWZoQYHswA4lIDtUG7jRUjnJFyfNDSBG32Ja7R&new=1">链接</a>。</p></li><li><p>工程新建  </p><blockquote><p>打开 pycharm后，选择“Create New Project”。<br><img src="/2019/03/16/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/2019-03-16-python%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98-%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0%E4%B8%8B%E8%BD%BD-(01)pycharm%E4%BD%BF%E7%94%A8%E4%B8%8E%E5%B7%A5%E7%A8%8B%E6%90%AD%E5%BB%BA/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20190317184507.png"><br><strong>Location</strong> ：选择工程文件存放目录。<br><strong>Interpreter</strong>：  </p><ul><li>程序解释器：这里需要选择新建或者选择一个已有的python工程运行环境，也就是程序解释器。后面我们手动安装的各种python包（package、轮子）需要存放在这个目录(这里是venv这个目录)下。  </li><li>解释器配置：一番为了保证每个工程的独立性和减少耦合，通常每个工程会用自己独立的程序解释器。并且不会继承全局包地址和使这个配置对所有工程可见，我们选择ubuntu默认带的比较新的3.6版本。配置如下图。  </li><li>创建：配置好后我们点击创建”Create”既可以创建好了。这里有一个报错，现象与解决办法见文末”附录1”。<br><img src="/2019/03/16/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/2019-03-16-python%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98-%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0%E4%B8%8B%E8%BD%BD-(01)pycharm%E4%BD%BF%E7%94%A8%E4%B8%8E%E5%B7%A5%E7%A8%8B%E6%90%AD%E5%BB%BA/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20190317185143.png">  </li><li>其他问题：<br><img src="/2019/03/16/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/2019-03-16-python%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98-%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0%E4%B8%8B%E8%BD%BD-(01)pycharm%E4%BD%BF%E7%94%A8%E4%B8%8E%E5%B7%A5%E7%A8%8B%E6%90%AD%E5%BB%BA/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20190317203436.png"></li></ul></blockquote></li></ol><blockquote></blockquote><ol start="3"><li>hello world：开始干活啦！<blockquote><ul><li>新建主文件：dangdangdang~ 。我们的主文件出现啦，写下我们的干活宣言。<br>注意红框左上角的”Project Files”，这里是工程目录的展示方式，一番喜欢用”Project Files”的视角去查看整个工程的情况。<br><img src="/2019/03/16/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/2019-03-16-python%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98-%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0%E4%B8%8B%E8%BD%BD-(01)pycharm%E4%BD%BF%E7%94%A8%E4%B8%8E%E5%B7%A5%E7%A8%8B%E6%90%AD%E5%BB%BA/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20190317210107.png">  </li><li>新建并指定解释器：完成工程新建后发现python console里还有报错，我们需要为工程指定解释器，见“附录2”。</li><li>运行：点击绿色运行按钮。啦啦啦，“hello world!”看世界对我们的友善回应。<br><img src="/2019/03/16/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/2019-03-16-python%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98-%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0%E4%B8%8B%E8%BD%BD-(01)pycharm%E4%BD%BF%E7%94%A8%E4%B8%8E%E5%B7%A5%E7%A8%8B%E6%90%AD%E5%BB%BA/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20190317212127.png"><br>这样我们的工程就搭建结束啦，算是为后面工程的继续添砖加瓦打下了坚实的地基，所谓万行代码从”hello world”起。我们就可以在这个工程下继续添砖加瓦啦。</li></ul></blockquote></li><li>其他使用技巧<blockquote><p>对于一个IDE的使用，包括<strong>快捷键、主题设置</strong>等等，这些其实并不是很重要，哪怕我们只会鼠标键盘，基于前面的三步，已经可以完成我们的整个工程开发了。但为了提高效率和舒适度，我们还是可以掌握一下的，这里一番为小伙伴们找了几篇相关文章，可以供大家拓展学习。  </p><ul><li><a href="https://mp.weixin.qq.com/s?src=11&timestamp=1552829715&ver=1490&signature=m7XTJ7XwLpKNN3hRod0INdCDlTx*mLG3iXNVR5Fo3Sfy04HmILJT*yj5RIWl-K04LSkVNG9HUySDznkIbCohdkHszdpdy46lSJjVJNSM44ApnLKZ68uz*aoJzAV*hT6F&new=1">手把手教你配置最漂亮的PyCharm界面,Python程序员必备!</a>  </li><li><a href="https://mp.weixin.qq.com/s?src=11&timestamp=1552829817&ver=1490&signature=EYkLCGAryx4NxP67Ya4u-2GkVDXhv*eEw94YJqsamXHLLNvAttgYbpUTOQhngzQb36xu4yaanGJ5cOZ44VgJjMTCTkKjxrJ*M28*6*TBl*eSDbjtIByvjZNit42daXP2&new=1">Pycharm快捷键大全 </a>  </li><li><strong>其他</strong>：当然，基于eclipse的IDE可谓功能极其强大，还有一些开发和调试的实用技能，一番会在后面文章用到时穿插在各个功能开发与调试的文章中，在潜移默化中完成对pycharm的驾驭。</li></ul></blockquote></li><li>呼 ~ 打完收工！<br><img src="/2019/03/16/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/2019-03-16-python%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98-%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0%E4%B8%8B%E8%BD%BD-(01)pycharm%E4%BD%BF%E7%94%A8%E4%B8%8E%E5%B7%A5%E7%A8%8B%E6%90%AD%E5%BB%BA/womenshixiongdi.png"></li></ol><p><strong>附录</strong>：</p><blockquote><ol><li>报错：ModuleNotFoundError: No module named ‘distutils.core’。<br>原因：ubuntu默认没有安装pip安装器，这个会影响到我们安装python包（轮子）。<br>解决：sudo apt-get install python3-pip<br><img src="/2019/03/16/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/2019-03-16-python%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98-%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0%E4%B8%8B%E8%BD%BD-(01)pycharm%E4%BD%BF%E7%94%A8%E4%B8%8E%E5%B7%A5%E7%A8%8B%E6%90%AD%E5%BB%BA/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20190317191425.png"></li></ol></blockquote><blockquote><ol start="2"><li>报错：Error:Python interpreter is not selected.Please setup Python interpreter first.<br>原因：虽然我们创建工程的时候有新建解释器，但我们并没有完成指定，这需要我们给我们的工程指定解释器。<br>解决：我们点击 “file” → “Setting” → “Project Interpreter” → “Add”，如下图，最后OK。<br><img src="/2019/03/16/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/2019-03-16-python%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98-%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0%E4%B8%8B%E8%BD%BD-(01)pycharm%E4%BD%BF%E7%94%A8%E4%B8%8E%E5%B7%A5%E7%A8%8B%E6%90%AD%E5%BB%BA/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20190317204146.png"><br><img src="/2019/03/16/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/2019-03-16-python%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98-%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0%E4%B8%8B%E8%BD%BD-(01)pycharm%E4%BD%BF%E7%94%A8%E4%B8%8E%E5%B7%A5%E7%A8%8B%E6%90%AD%E5%BB%BA/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20190317204344.png"><br>选择我们刚新建的解释器。好啦，以后我们要为我们的工程添加新的依赖包时就点这里的“+”就可以啦，非常方便。<br><img src="/2019/03/16/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/2019-03-16-python%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98-%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0%E4%B8%8B%E8%BD%BD-(01)pycharm%E4%BD%BF%E7%94%A8%E4%B8%8E%E5%B7%A5%E7%A8%8B%E6%90%AD%E5%BB%BA/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20190317204450.png"><br>然后我们为本工程指定解释器，以后我们点击绿色小三角运行我们的工程时就是用的这里指定的<strong>脚本入口</strong>和<strong>解释器</strong>啦。<br><img src="/2019/03/16/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/2019-03-16-python%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98-%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0%E4%B8%8B%E8%BD%BD-(01)pycharm%E4%BD%BF%E7%94%A8%E4%B8%8E%E5%B7%A5%E7%A8%8B%E6%90%AD%E5%BB%BA/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20190317205709.png"><br><img src="/2019/03/16/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/2019-03-16-python%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98-%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0%E4%B8%8B%E8%BD%BD-(01)pycharm%E4%BD%BF%E7%94%A8%E4%B8%8E%E5%B7%A5%E7%A8%8B%E6%90%AD%E5%BB%BA/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20190317211351.png"></li></ol></blockquote><blockquote><p>下期预告：python爬虫实战-爬取微信公众号所有历史文章 - (02) python封装adb命令操作安卓手机</p></blockquote><blockquote><p>欢迎关注微信公众号“<strong>一番码客</strong>”获取<strong>免费下载服务</strong>与<strong>源码</strong>，并及时接收最新文章推送。点击“阅读原文”有惊喜。  </p></blockquote><blockquote><p><strong>趋势不会因为个别的吝啬与懒惰而停止向前的车轮，所以迈开脚步，一起赶路。</strong>  </p></blockquote><blockquote><p><strong>微信公众号：一番码客</strong><br><strong>官方网站： <a href="http://www.efonmark.com/">www.efonmark.com</a></strong></p></blockquote>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;一番码客 : 效率软件推荐&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;&lt;a href=&quot;http://www.efonmark.com/&quot;&gt;www.efonmark.com&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;风筝遇春风而起，春雨遇暖阳而至。精神食粮如期为你呈上。&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;/2019/03/16/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/2019-03-16-python%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98-%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0%E4%B8%8B%E8%BD%BD-(01)pycharm%E4%BD%BF%E7%94%A8%E4%B8%8E%E5%B7%A5%E7%A8%8B%E6%90%AD%E5%BB%BA/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20190316215125.jpg&quot;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;所谓工欲善其事必先利其器，为了使用python搞事情，那首先是搭好环境，写下程序员的开山题词“hello world！”。  &lt;/p&gt;</summary>
    
    
    
    <category term="软件开发实战" scheme="http://www.efonmark.com/categories/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/"/>
    
    
  </entry>
  
</feed>
